// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "alt+s",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    // {
    //     "key": "ctrl+alt+right",
    //     "command": "cursorLineEnd"
    // },
    // {
    //     "key": "ctrl+alt+left",
    //     "command": "cursorLineStart"
    // },
    // {
    //     "key": "ctrl+shift+alt+left",
    //     "command": "cursorLineStartSelect"
    // },
    // {
    //     "key": "ctrl+shift+alt+right",
    //     "command": "cursorLineEndSelect"
    // },
    // {
    //     "key": "ctrl+k ctrl+pagedown",
    //     "command": "-workbench.action.nextEditorInGroup"
    // },
    {
        "key": "ctrl+k ctrl+pageup",
        "command": "-workbench.action.previousEditorInGroup"
    },
    {
        "key": "alt+f alt+a",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "alt+f alt+d",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+alt+v",
        "command": "toggleVim"
    },
    {
        "key": "shift+alt+h",
        "command": "workbench.action.moveEditorToLeftGroup"
    },
    {
        "key": "shift+alt+l",
        "command": "workbench.action.moveEditorToRightGroup"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+k ctrl+up",
        "command": "-workbench.action.focusAboveGroup"
    },
    {
        "key": "alt+j",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+k ctrl+down",
        "command": "-workbench.action.focusBelowGroup"
    },
    {
        "key": "shift+alt+k",
        "command": "workbench.action.moveEditorToAboveGroup"
    },
    {
        "key": "shift+alt+j",
        "command": "workbench.action.moveEditorToBelowGroup"
    },
    {
        "key": "alt+t",
        "command": "workbench.action.files.newUntitledFile"
    },
    {
        "key": "shift+alt+t",
        "command": "openInTerminal"
    },
    {
        "key": "alt+w",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "alt+d",
        "command": "workbench.action.nextEditorInGroup"
    },
    {
        "key": "alt+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+alt+p",
        "command": "extension.vim_ctrl+p",
        "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+p",
        "command": "-extension.vim_ctrl+p",
        "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+alt+capslock n",
        "command": "extension.vim_ctrl+n",
        "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+n",
        "command": "-extension.vim_ctrl+n",
        "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+alt+capslock k",
        "command": "extension.vim_ctrl+k",
        "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
    },
    {
        "key": "ctrl+k",
        "command": "-extension.vim_ctrl+k",
        "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
    },
    {
        "key": "ctrl+alt+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "shift+alt+;",
        "command": "workbench.action.debug.run",
        "when": "debuggersAvailable && debugState != 'initializing'"
    },
    {
        "key": "alt+a",
        "command": "workbench.action.previousEditorInGroup"
    },
    {
        "key": "alt+h",
        "command": "workbench.action.focusPreviousGroup"
    },
    {
        "key": "alt+l",
        "command": "workbench.action.focusNextGroup"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.terminal.clear"
    },
    // {
    //   "description": "R Pipe Operator",
    //   "key": "ctrl+shift+m",
    //   "command": "type",
    //   "args": {"text": " %>% "},
    //   "when": "editorTextFocus",
    // },
    {
      "description": "R Assignment Arrow",
      "key": "alt+-",
      "command": "type",
      "args": {"text": " <- "},
      "when": "editorTextFocus",
    },
    {
        "key": "ctrl+oem_1 m",
        "command": "notebook.cell.changeToMarkdown",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code'"
    },
    {
        "key": "m",
        "command": "-notebook.cell.changeToMarkdown",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code'"
    },
    {
        "key": "ctrl+oem_1 y",
        "command": "notebook.cell.changeToCode",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
    },
    {
        "key": "y",
        "command": "-notebook.cell.changeToCode",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
    },
    {
        "key": "alt+f alt+d",
        "command": "workbench.action.focusNextGroup"
    },
    {
        "key": "alt+f alt+a",
        "command": "workbench.action.focusPreviousGroup"
    },
    {
        "key": "ctrl+b",
        "command": "-extension.vim_ctrl+b",
        "when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl && vim.mode != 'Insert'"
    }
]